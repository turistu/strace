/* Generated by ./src/xlat/gen.sh from ./src/xlat/v4l2_input_capabilities_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_IN_CAP_DV_TIMINGS) == (0x00000002), "V4L2_IN_CAP_DV_TIMINGS != 0x00000002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_IN_CAP_STD) == (0x00000004), "V4L2_IN_CAP_STD != 0x00000004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_IN_CAP_NATIVE_SIZE) == (0x00000008), "V4L2_IN_CAP_NATIVE_SIZE != 0x00000008");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_input_capabilities_flags[];

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data v4l2_input_capabilities_flags_xdata[] = {
 XLAT(V4L2_IN_CAP_DV_TIMINGS),
 #define XLAT_VAL_0 ((unsigned) (V4L2_IN_CAP_DV_TIMINGS))
 #define XLAT_STR_0 STRINGIFY(V4L2_IN_CAP_DV_TIMINGS)
 XLAT(V4L2_IN_CAP_STD),
 #define XLAT_VAL_1 ((unsigned) (V4L2_IN_CAP_STD))
 #define XLAT_STR_1 STRINGIFY(V4L2_IN_CAP_STD)
 XLAT(V4L2_IN_CAP_NATIVE_SIZE),
 #define XLAT_VAL_2 ((unsigned) (V4L2_IN_CAP_NATIVE_SIZE))
 #define XLAT_STR_2 STRINGIFY(V4L2_IN_CAP_NATIVE_SIZE)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_input_capabilities_flags[1] = { {
 .data = v4l2_input_capabilities_flags_xdata,
 .size = ARRAY_SIZE(v4l2_input_capabilities_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
