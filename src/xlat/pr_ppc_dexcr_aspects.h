/* Generated by ./src/xlat/gen.sh from ./src/xlat/pr_ppc_dexcr_aspects.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PR_PPC_DEXCR_SBHE) || (defined(HAVE_DECL_PR_PPC_DEXCR_SBHE) && HAVE_DECL_PR_PPC_DEXCR_SBHE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_PPC_DEXCR_SBHE) == (0), "PR_PPC_DEXCR_SBHE != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_PPC_DEXCR_SBHE 0
#endif
#if defined(PR_PPC_DEXCR_IBRTPD) || (defined(HAVE_DECL_PR_PPC_DEXCR_IBRTPD) && HAVE_DECL_PR_PPC_DEXCR_IBRTPD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_PPC_DEXCR_IBRTPD) == (1), "PR_PPC_DEXCR_IBRTPD != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_PPC_DEXCR_IBRTPD 1
#endif
#if defined(PR_PPC_DEXCR_SRAPD) || (defined(HAVE_DECL_PR_PPC_DEXCR_SRAPD) && HAVE_DECL_PR_PPC_DEXCR_SRAPD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_PPC_DEXCR_SRAPD) == (2), "PR_PPC_DEXCR_SRAPD != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_PPC_DEXCR_SRAPD 2
#endif
#if defined(PR_PPC_DEXCR_NPHIE) || (defined(HAVE_DECL_PR_PPC_DEXCR_NPHIE) && HAVE_DECL_PR_PPC_DEXCR_NPHIE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_PPC_DEXCR_NPHIE) == (3), "PR_PPC_DEXCR_NPHIE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_PPC_DEXCR_NPHIE 3
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat pr_ppc_dexcr_aspects in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data pr_ppc_dexcr_aspects_xdata[] = {
 [PR_PPC_DEXCR_SBHE] = XLAT(PR_PPC_DEXCR_SBHE),
 #define XLAT_VAL_0 ((unsigned) (PR_PPC_DEXCR_SBHE))
 #define XLAT_STR_0 STRINGIFY(PR_PPC_DEXCR_SBHE)
 [PR_PPC_DEXCR_IBRTPD] = XLAT(PR_PPC_DEXCR_IBRTPD),
 #define XLAT_VAL_1 ((unsigned) (PR_PPC_DEXCR_IBRTPD))
 #define XLAT_STR_1 STRINGIFY(PR_PPC_DEXCR_IBRTPD)
 [PR_PPC_DEXCR_SRAPD] = XLAT(PR_PPC_DEXCR_SRAPD),
 #define XLAT_VAL_2 ((unsigned) (PR_PPC_DEXCR_SRAPD))
 #define XLAT_STR_2 STRINGIFY(PR_PPC_DEXCR_SRAPD)
 [PR_PPC_DEXCR_NPHIE] = XLAT(PR_PPC_DEXCR_NPHIE),
 #define XLAT_VAL_3 ((unsigned) (PR_PPC_DEXCR_NPHIE))
 #define XLAT_STR_3 STRINGIFY(PR_PPC_DEXCR_NPHIE)
};
static
const struct xlat pr_ppc_dexcr_aspects[1] = { {
 .data = pr_ppc_dexcr_aspects_xdata,
 .size = ARRAY_SIZE(pr_ppc_dexcr_aspects_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
