/* Generated by ./src/xlat/gen.sh from ./src/xlat/uring_setup_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uring_setup_flags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data uring_setup_flags_xdata[] = {
 XLAT(IORING_SETUP_IOPOLL),
 #define XLAT_VAL_0 ((unsigned) (IORING_SETUP_IOPOLL))
 #define XLAT_STR_0 STRINGIFY(IORING_SETUP_IOPOLL)
 XLAT(IORING_SETUP_SQPOLL),
 #define XLAT_VAL_1 ((unsigned) (IORING_SETUP_SQPOLL))
 #define XLAT_STR_1 STRINGIFY(IORING_SETUP_SQPOLL)
 XLAT(IORING_SETUP_SQ_AFF),
 #define XLAT_VAL_2 ((unsigned) (IORING_SETUP_SQ_AFF))
 #define XLAT_STR_2 STRINGIFY(IORING_SETUP_SQ_AFF)
 XLAT(IORING_SETUP_CQSIZE),
 #define XLAT_VAL_3 ((unsigned) (IORING_SETUP_CQSIZE))
 #define XLAT_STR_3 STRINGIFY(IORING_SETUP_CQSIZE)
 XLAT(IORING_SETUP_CLAMP),
 #define XLAT_VAL_4 ((unsigned) (IORING_SETUP_CLAMP))
 #define XLAT_STR_4 STRINGIFY(IORING_SETUP_CLAMP)
 XLAT(IORING_SETUP_ATTACH_WQ),
 #define XLAT_VAL_5 ((unsigned) (IORING_SETUP_ATTACH_WQ))
 #define XLAT_STR_5 STRINGIFY(IORING_SETUP_ATTACH_WQ)
 XLAT(IORING_SETUP_R_DISABLED),
 #define XLAT_VAL_6 ((unsigned) (IORING_SETUP_R_DISABLED))
 #define XLAT_STR_6 STRINGIFY(IORING_SETUP_R_DISABLED)
 XLAT(IORING_SETUP_SUBMIT_ALL),
 #define XLAT_VAL_7 ((unsigned) (IORING_SETUP_SUBMIT_ALL))
 #define XLAT_STR_7 STRINGIFY(IORING_SETUP_SUBMIT_ALL)
 XLAT(IORING_SETUP_COOP_TASKRUN),
 #define XLAT_VAL_8 ((unsigned) (IORING_SETUP_COOP_TASKRUN))
 #define XLAT_STR_8 STRINGIFY(IORING_SETUP_COOP_TASKRUN)
 XLAT(IORING_SETUP_TASKRUN_FLAG),
 #define XLAT_VAL_9 ((unsigned) (IORING_SETUP_TASKRUN_FLAG))
 #define XLAT_STR_9 STRINGIFY(IORING_SETUP_TASKRUN_FLAG)
 XLAT(IORING_SETUP_SQE128),
 #define XLAT_VAL_10 ((unsigned) (IORING_SETUP_SQE128))
 #define XLAT_STR_10 STRINGIFY(IORING_SETUP_SQE128)
 XLAT(IORING_SETUP_CQE32),
 #define XLAT_VAL_11 ((unsigned) (IORING_SETUP_CQE32))
 #define XLAT_STR_11 STRINGIFY(IORING_SETUP_CQE32)
 XLAT(IORING_SETUP_SINGLE_ISSUER),
 #define XLAT_VAL_12 ((unsigned) (IORING_SETUP_SINGLE_ISSUER))
 #define XLAT_STR_12 STRINGIFY(IORING_SETUP_SINGLE_ISSUER)
 XLAT(IORING_SETUP_DEFER_TASKRUN),
 #define XLAT_VAL_13 ((unsigned) (IORING_SETUP_DEFER_TASKRUN))
 #define XLAT_STR_13 STRINGIFY(IORING_SETUP_DEFER_TASKRUN)
 XLAT(IORING_SETUP_NO_MMAP),
 #define XLAT_VAL_14 ((unsigned) (IORING_SETUP_NO_MMAP))
 #define XLAT_STR_14 STRINGIFY(IORING_SETUP_NO_MMAP)
 XLAT(IORING_SETUP_REGISTERED_FD_ONLY),
 #define XLAT_VAL_15 ((unsigned) (IORING_SETUP_REGISTERED_FD_ONLY))
 #define XLAT_STR_15 STRINGIFY(IORING_SETUP_REGISTERED_FD_ONLY)
 XLAT(IORING_SETUP_NO_SQARRAY),
 #define XLAT_VAL_16 ((unsigned) (IORING_SETUP_NO_SQARRAY))
 #define XLAT_STR_16 STRINGIFY(IORING_SETUP_NO_SQARRAY)
};
static
const struct xlat uring_setup_flags[1] = { {
 .data = uring_setup_flags_xdata,
 .size = ARRAY_SIZE(uring_setup_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
