/* Generated by ./src/xlat/gen.sh from ./src/xlat/genl_ctrl_attr.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat genl_ctrl_attr in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data genl_ctrl_attr_xdata[] = {

 [CTRL_ATTR_UNSPEC] = XLAT(CTRL_ATTR_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (CTRL_ATTR_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(CTRL_ATTR_UNSPEC)
 [CTRL_ATTR_FAMILY_ID] = XLAT(CTRL_ATTR_FAMILY_ID),
 #define XLAT_VAL_1 ((unsigned) (CTRL_ATTR_FAMILY_ID))
 #define XLAT_STR_1 STRINGIFY(CTRL_ATTR_FAMILY_ID)
 [CTRL_ATTR_FAMILY_NAME] = XLAT(CTRL_ATTR_FAMILY_NAME),
 #define XLAT_VAL_2 ((unsigned) (CTRL_ATTR_FAMILY_NAME))
 #define XLAT_STR_2 STRINGIFY(CTRL_ATTR_FAMILY_NAME)
 [CTRL_ATTR_VERSION] = XLAT(CTRL_ATTR_VERSION),
 #define XLAT_VAL_3 ((unsigned) (CTRL_ATTR_VERSION))
 #define XLAT_STR_3 STRINGIFY(CTRL_ATTR_VERSION)
 [CTRL_ATTR_HDRSIZE] = XLAT(CTRL_ATTR_HDRSIZE),
 #define XLAT_VAL_4 ((unsigned) (CTRL_ATTR_HDRSIZE))
 #define XLAT_STR_4 STRINGIFY(CTRL_ATTR_HDRSIZE)
 [CTRL_ATTR_MAXATTR] = XLAT(CTRL_ATTR_MAXATTR),
 #define XLAT_VAL_5 ((unsigned) (CTRL_ATTR_MAXATTR))
 #define XLAT_STR_5 STRINGIFY(CTRL_ATTR_MAXATTR)
 [CTRL_ATTR_OPS] = XLAT(CTRL_ATTR_OPS),
 #define XLAT_VAL_6 ((unsigned) (CTRL_ATTR_OPS))
 #define XLAT_STR_6 STRINGIFY(CTRL_ATTR_OPS)
 [CTRL_ATTR_MCAST_GROUPS] = XLAT(CTRL_ATTR_MCAST_GROUPS),
 #define XLAT_VAL_7 ((unsigned) (CTRL_ATTR_MCAST_GROUPS))
 #define XLAT_STR_7 STRINGIFY(CTRL_ATTR_MCAST_GROUPS)
 [CTRL_ATTR_POLICY] = XLAT(CTRL_ATTR_POLICY),
 #define XLAT_VAL_8 ((unsigned) (CTRL_ATTR_POLICY))
 #define XLAT_STR_8 STRINGIFY(CTRL_ATTR_POLICY)
 [CTRL_ATTR_OP_POLICY] = XLAT(CTRL_ATTR_OP_POLICY),
 #define XLAT_VAL_9 ((unsigned) (CTRL_ATTR_OP_POLICY))
 #define XLAT_STR_9 STRINGIFY(CTRL_ATTR_OP_POLICY)
 [CTRL_ATTR_OP] = XLAT(CTRL_ATTR_OP),
 #define XLAT_VAL_10 ((unsigned) (CTRL_ATTR_OP))
 #define XLAT_STR_10 STRINGIFY(CTRL_ATTR_OP)
};
static
const struct xlat genl_ctrl_attr[1] = { {
 .data = genl_ctrl_attr_xdata,
 .size = ARRAY_SIZE(genl_ctrl_attr_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
