/* Generated by ./src/xlat/gen.sh from ./src/xlat/term_cflags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat term_cflags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data term_cflags_xdata[] = {
#if defined(CSTOPB) || (defined(HAVE_DECL_CSTOPB) && HAVE_DECL_CSTOPB)
  XLAT(CSTOPB),
 #define XLAT_VAL_0 ((unsigned) (CSTOPB))
 #define XLAT_STR_0 STRINGIFY(CSTOPB)
#endif
#if defined(CREAD) || (defined(HAVE_DECL_CREAD) && HAVE_DECL_CREAD)
  XLAT(CREAD),
 #define XLAT_VAL_1 ((unsigned) (CREAD))
 #define XLAT_STR_1 STRINGIFY(CREAD)
#endif
#if defined(PARENB) || (defined(HAVE_DECL_PARENB) && HAVE_DECL_PARENB)
  XLAT(PARENB),
 #define XLAT_VAL_2 ((unsigned) (PARENB))
 #define XLAT_STR_2 STRINGIFY(PARENB)
#endif
#if defined(PARODD) || (defined(HAVE_DECL_PARODD) && HAVE_DECL_PARODD)
  XLAT(PARODD),
 #define XLAT_VAL_3 ((unsigned) (PARODD))
 #define XLAT_STR_3 STRINGIFY(PARODD)
#endif
#if defined(HUPCL) || (defined(HAVE_DECL_HUPCL) && HAVE_DECL_HUPCL)
  XLAT(HUPCL),
 #define XLAT_VAL_4 ((unsigned) (HUPCL))
 #define XLAT_STR_4 STRINGIFY(HUPCL)
#endif
#if defined(CLOCAL) || (defined(HAVE_DECL_CLOCAL) && HAVE_DECL_CLOCAL)
  XLAT(CLOCAL),
 #define XLAT_VAL_5 ((unsigned) (CLOCAL))
 #define XLAT_STR_5 STRINGIFY(CLOCAL)
#endif
#if defined(CTVB) || (defined(HAVE_DECL_CTVB) && HAVE_DECL_CTVB)
  XLAT(CTVB),
 #define XLAT_VAL_6 ((unsigned) (CTVB))
 #define XLAT_STR_6 STRINGIFY(CTVB)
#endif
#if defined(CMSPAR) || (defined(HAVE_DECL_CMSPAR) && HAVE_DECL_CMSPAR)
  XLAT(CMSPAR),
 #define XLAT_VAL_7 ((unsigned) (CMSPAR))
 #define XLAT_STR_7 STRINGIFY(CMSPAR)
#endif
#if defined(CRTSCTS) || (defined(HAVE_DECL_CRTSCTS) && HAVE_DECL_CRTSCTS)
  XLAT(CRTSCTS),
 #define XLAT_VAL_8 ((unsigned) (CRTSCTS))
 #define XLAT_STR_8 STRINGIFY(CRTSCTS)
#endif
};
static
const struct xlat term_cflags[1] = { {
 .data = term_cflags_xdata,
 .size = ARRAY_SIZE(term_cflags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
