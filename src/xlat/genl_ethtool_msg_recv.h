/* Generated by ./src/xlat/gen.sh from ./src/xlat/genl_ethtool_msg_recv.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat genl_ethtool_msg_recv in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data genl_ethtool_msg_recv_xdata[] = {

 [ETHTOOL_MSG_KERNEL_NONE] = XLAT(ETHTOOL_MSG_KERNEL_NONE),
 #define XLAT_VAL_0 ((unsigned) (ETHTOOL_MSG_KERNEL_NONE))
 #define XLAT_STR_0 STRINGIFY(ETHTOOL_MSG_KERNEL_NONE)
 [ETHTOOL_MSG_STRSET_GET_REPLY] = XLAT(ETHTOOL_MSG_STRSET_GET_REPLY),
 #define XLAT_VAL_1 ((unsigned) (ETHTOOL_MSG_STRSET_GET_REPLY))
 #define XLAT_STR_1 STRINGIFY(ETHTOOL_MSG_STRSET_GET_REPLY)
 [ETHTOOL_MSG_LINKINFO_GET_REPLY] = XLAT(ETHTOOL_MSG_LINKINFO_GET_REPLY),
 #define XLAT_VAL_2 ((unsigned) (ETHTOOL_MSG_LINKINFO_GET_REPLY))
 #define XLAT_STR_2 STRINGIFY(ETHTOOL_MSG_LINKINFO_GET_REPLY)
 [ETHTOOL_MSG_LINKINFO_NTF] = XLAT(ETHTOOL_MSG_LINKINFO_NTF),
 #define XLAT_VAL_3 ((unsigned) (ETHTOOL_MSG_LINKINFO_NTF))
 #define XLAT_STR_3 STRINGIFY(ETHTOOL_MSG_LINKINFO_NTF)
 [ETHTOOL_MSG_LINKMODES_GET_REPLY] = XLAT(ETHTOOL_MSG_LINKMODES_GET_REPLY),
 #define XLAT_VAL_4 ((unsigned) (ETHTOOL_MSG_LINKMODES_GET_REPLY))
 #define XLAT_STR_4 STRINGIFY(ETHTOOL_MSG_LINKMODES_GET_REPLY)
 [ETHTOOL_MSG_LINKMODES_NTF] = XLAT(ETHTOOL_MSG_LINKMODES_NTF),
 #define XLAT_VAL_5 ((unsigned) (ETHTOOL_MSG_LINKMODES_NTF))
 #define XLAT_STR_5 STRINGIFY(ETHTOOL_MSG_LINKMODES_NTF)
 [ETHTOOL_MSG_LINKSTATE_GET_REPLY] = XLAT(ETHTOOL_MSG_LINKSTATE_GET_REPLY),
 #define XLAT_VAL_6 ((unsigned) (ETHTOOL_MSG_LINKSTATE_GET_REPLY))
 #define XLAT_STR_6 STRINGIFY(ETHTOOL_MSG_LINKSTATE_GET_REPLY)
 [ETHTOOL_MSG_DEBUG_GET_REPLY] = XLAT(ETHTOOL_MSG_DEBUG_GET_REPLY),
 #define XLAT_VAL_7 ((unsigned) (ETHTOOL_MSG_DEBUG_GET_REPLY))
 #define XLAT_STR_7 STRINGIFY(ETHTOOL_MSG_DEBUG_GET_REPLY)
 [ETHTOOL_MSG_DEBUG_NTF] = XLAT(ETHTOOL_MSG_DEBUG_NTF),
 #define XLAT_VAL_8 ((unsigned) (ETHTOOL_MSG_DEBUG_NTF))
 #define XLAT_STR_8 STRINGIFY(ETHTOOL_MSG_DEBUG_NTF)
 [ETHTOOL_MSG_WOL_GET_REPLY] = XLAT(ETHTOOL_MSG_WOL_GET_REPLY),
 #define XLAT_VAL_9 ((unsigned) (ETHTOOL_MSG_WOL_GET_REPLY))
 #define XLAT_STR_9 STRINGIFY(ETHTOOL_MSG_WOL_GET_REPLY)
 [ETHTOOL_MSG_WOL_NTF] = XLAT(ETHTOOL_MSG_WOL_NTF),
 #define XLAT_VAL_10 ((unsigned) (ETHTOOL_MSG_WOL_NTF))
 #define XLAT_STR_10 STRINGIFY(ETHTOOL_MSG_WOL_NTF)
 [ETHTOOL_MSG_FEATURES_GET_REPLY] = XLAT(ETHTOOL_MSG_FEATURES_GET_REPLY),
 #define XLAT_VAL_11 ((unsigned) (ETHTOOL_MSG_FEATURES_GET_REPLY))
 #define XLAT_STR_11 STRINGIFY(ETHTOOL_MSG_FEATURES_GET_REPLY)
 [ETHTOOL_MSG_FEATURES_SET_REPLY] = XLAT(ETHTOOL_MSG_FEATURES_SET_REPLY),
 #define XLAT_VAL_12 ((unsigned) (ETHTOOL_MSG_FEATURES_SET_REPLY))
 #define XLAT_STR_12 STRINGIFY(ETHTOOL_MSG_FEATURES_SET_REPLY)
 [ETHTOOL_MSG_FEATURES_NTF] = XLAT(ETHTOOL_MSG_FEATURES_NTF),
 #define XLAT_VAL_13 ((unsigned) (ETHTOOL_MSG_FEATURES_NTF))
 #define XLAT_STR_13 STRINGIFY(ETHTOOL_MSG_FEATURES_NTF)
 [ETHTOOL_MSG_PRIVFLAGS_GET_REPLY] = XLAT(ETHTOOL_MSG_PRIVFLAGS_GET_REPLY),
 #define XLAT_VAL_14 ((unsigned) (ETHTOOL_MSG_PRIVFLAGS_GET_REPLY))
 #define XLAT_STR_14 STRINGIFY(ETHTOOL_MSG_PRIVFLAGS_GET_REPLY)
 [ETHTOOL_MSG_PRIVFLAGS_NTF] = XLAT(ETHTOOL_MSG_PRIVFLAGS_NTF),
 #define XLAT_VAL_15 ((unsigned) (ETHTOOL_MSG_PRIVFLAGS_NTF))
 #define XLAT_STR_15 STRINGIFY(ETHTOOL_MSG_PRIVFLAGS_NTF)
 [ETHTOOL_MSG_RINGS_GET_REPLY] = XLAT(ETHTOOL_MSG_RINGS_GET_REPLY),
 #define XLAT_VAL_16 ((unsigned) (ETHTOOL_MSG_RINGS_GET_REPLY))
 #define XLAT_STR_16 STRINGIFY(ETHTOOL_MSG_RINGS_GET_REPLY)
 [ETHTOOL_MSG_RINGS_NTF] = XLAT(ETHTOOL_MSG_RINGS_NTF),
 #define XLAT_VAL_17 ((unsigned) (ETHTOOL_MSG_RINGS_NTF))
 #define XLAT_STR_17 STRINGIFY(ETHTOOL_MSG_RINGS_NTF)
 [ETHTOOL_MSG_CHANNELS_GET_REPLY] = XLAT(ETHTOOL_MSG_CHANNELS_GET_REPLY),
 #define XLAT_VAL_18 ((unsigned) (ETHTOOL_MSG_CHANNELS_GET_REPLY))
 #define XLAT_STR_18 STRINGIFY(ETHTOOL_MSG_CHANNELS_GET_REPLY)
 [ETHTOOL_MSG_CHANNELS_NTF] = XLAT(ETHTOOL_MSG_CHANNELS_NTF),
 #define XLAT_VAL_19 ((unsigned) (ETHTOOL_MSG_CHANNELS_NTF))
 #define XLAT_STR_19 STRINGIFY(ETHTOOL_MSG_CHANNELS_NTF)
 [ETHTOOL_MSG_COALESCE_GET_REPLY] = XLAT(ETHTOOL_MSG_COALESCE_GET_REPLY),
 #define XLAT_VAL_20 ((unsigned) (ETHTOOL_MSG_COALESCE_GET_REPLY))
 #define XLAT_STR_20 STRINGIFY(ETHTOOL_MSG_COALESCE_GET_REPLY)
 [ETHTOOL_MSG_COALESCE_NTF] = XLAT(ETHTOOL_MSG_COALESCE_NTF),
 #define XLAT_VAL_21 ((unsigned) (ETHTOOL_MSG_COALESCE_NTF))
 #define XLAT_STR_21 STRINGIFY(ETHTOOL_MSG_COALESCE_NTF)
 [ETHTOOL_MSG_PAUSE_GET_REPLY] = XLAT(ETHTOOL_MSG_PAUSE_GET_REPLY),
 #define XLAT_VAL_22 ((unsigned) (ETHTOOL_MSG_PAUSE_GET_REPLY))
 #define XLAT_STR_22 STRINGIFY(ETHTOOL_MSG_PAUSE_GET_REPLY)
 [ETHTOOL_MSG_PAUSE_NTF] = XLAT(ETHTOOL_MSG_PAUSE_NTF),
 #define XLAT_VAL_23 ((unsigned) (ETHTOOL_MSG_PAUSE_NTF))
 #define XLAT_STR_23 STRINGIFY(ETHTOOL_MSG_PAUSE_NTF)
 [ETHTOOL_MSG_EEE_GET_REPLY] = XLAT(ETHTOOL_MSG_EEE_GET_REPLY),
 #define XLAT_VAL_24 ((unsigned) (ETHTOOL_MSG_EEE_GET_REPLY))
 #define XLAT_STR_24 STRINGIFY(ETHTOOL_MSG_EEE_GET_REPLY)
 [ETHTOOL_MSG_EEE_NTF] = XLAT(ETHTOOL_MSG_EEE_NTF),
 #define XLAT_VAL_25 ((unsigned) (ETHTOOL_MSG_EEE_NTF))
 #define XLAT_STR_25 STRINGIFY(ETHTOOL_MSG_EEE_NTF)
 [ETHTOOL_MSG_TSINFO_GET_REPLY] = XLAT(ETHTOOL_MSG_TSINFO_GET_REPLY),
 #define XLAT_VAL_26 ((unsigned) (ETHTOOL_MSG_TSINFO_GET_REPLY))
 #define XLAT_STR_26 STRINGIFY(ETHTOOL_MSG_TSINFO_GET_REPLY)
 [ETHTOOL_MSG_CABLE_TEST_NTF] = XLAT(ETHTOOL_MSG_CABLE_TEST_NTF),
 #define XLAT_VAL_27 ((unsigned) (ETHTOOL_MSG_CABLE_TEST_NTF))
 #define XLAT_STR_27 STRINGIFY(ETHTOOL_MSG_CABLE_TEST_NTF)
 [ETHTOOL_MSG_CABLE_TEST_TDR_NTF] = XLAT(ETHTOOL_MSG_CABLE_TEST_TDR_NTF),
 #define XLAT_VAL_28 ((unsigned) (ETHTOOL_MSG_CABLE_TEST_TDR_NTF))
 #define XLAT_STR_28 STRINGIFY(ETHTOOL_MSG_CABLE_TEST_TDR_NTF)
 [ETHTOOL_MSG_TUNNEL_INFO_GET_REPLY] = XLAT(ETHTOOL_MSG_TUNNEL_INFO_GET_REPLY),
 #define XLAT_VAL_29 ((unsigned) (ETHTOOL_MSG_TUNNEL_INFO_GET_REPLY))
 #define XLAT_STR_29 STRINGIFY(ETHTOOL_MSG_TUNNEL_INFO_GET_REPLY)
 [ETHTOOL_MSG_FEC_GET_REPLY] = XLAT(ETHTOOL_MSG_FEC_GET_REPLY),
 #define XLAT_VAL_30 ((unsigned) (ETHTOOL_MSG_FEC_GET_REPLY))
 #define XLAT_STR_30 STRINGIFY(ETHTOOL_MSG_FEC_GET_REPLY)
 [ETHTOOL_MSG_FEC_NTF] = XLAT(ETHTOOL_MSG_FEC_NTF),
 #define XLAT_VAL_31 ((unsigned) (ETHTOOL_MSG_FEC_NTF))
 #define XLAT_STR_31 STRINGIFY(ETHTOOL_MSG_FEC_NTF)
 [ETHTOOL_MSG_MODULE_EEPROM_GET_REPLY] = XLAT(ETHTOOL_MSG_MODULE_EEPROM_GET_REPLY),
 #define XLAT_VAL_32 ((unsigned) (ETHTOOL_MSG_MODULE_EEPROM_GET_REPLY))
 #define XLAT_STR_32 STRINGIFY(ETHTOOL_MSG_MODULE_EEPROM_GET_REPLY)
 [ETHTOOL_MSG_STATS_GET_REPLY] = XLAT(ETHTOOL_MSG_STATS_GET_REPLY),
 #define XLAT_VAL_33 ((unsigned) (ETHTOOL_MSG_STATS_GET_REPLY))
 #define XLAT_STR_33 STRINGIFY(ETHTOOL_MSG_STATS_GET_REPLY)
 [ETHTOOL_MSG_PHC_VCLOCKS_GET_REPLY] = XLAT(ETHTOOL_MSG_PHC_VCLOCKS_GET_REPLY),
 #define XLAT_VAL_34 ((unsigned) (ETHTOOL_MSG_PHC_VCLOCKS_GET_REPLY))
 #define XLAT_STR_34 STRINGIFY(ETHTOOL_MSG_PHC_VCLOCKS_GET_REPLY)
 [ETHTOOL_MSG_MODULE_GET_REPLY] = XLAT(ETHTOOL_MSG_MODULE_GET_REPLY),
 #define XLAT_VAL_35 ((unsigned) (ETHTOOL_MSG_MODULE_GET_REPLY))
 #define XLAT_STR_35 STRINGIFY(ETHTOOL_MSG_MODULE_GET_REPLY)
 [ETHTOOL_MSG_MODULE_NTF] = XLAT(ETHTOOL_MSG_MODULE_NTF),
 #define XLAT_VAL_36 ((unsigned) (ETHTOOL_MSG_MODULE_NTF))
 #define XLAT_STR_36 STRINGIFY(ETHTOOL_MSG_MODULE_NTF)
 [ETHTOOL_MSG_PSE_GET_REPLY] = XLAT(ETHTOOL_MSG_PSE_GET_REPLY),
 #define XLAT_VAL_37 ((unsigned) (ETHTOOL_MSG_PSE_GET_REPLY))
 #define XLAT_STR_37 STRINGIFY(ETHTOOL_MSG_PSE_GET_REPLY)
 [ETHTOOL_MSG_RSS_GET_REPLY] = XLAT(ETHTOOL_MSG_RSS_GET_REPLY),
 #define XLAT_VAL_38 ((unsigned) (ETHTOOL_MSG_RSS_GET_REPLY))
 #define XLAT_STR_38 STRINGIFY(ETHTOOL_MSG_RSS_GET_REPLY)
 [ETHTOOL_MSG_PLCA_GET_CFG_REPLY] = XLAT(ETHTOOL_MSG_PLCA_GET_CFG_REPLY),
 #define XLAT_VAL_39 ((unsigned) (ETHTOOL_MSG_PLCA_GET_CFG_REPLY))
 #define XLAT_STR_39 STRINGIFY(ETHTOOL_MSG_PLCA_GET_CFG_REPLY)
 [ETHTOOL_MSG_PLCA_GET_STATUS_REPLY] = XLAT(ETHTOOL_MSG_PLCA_GET_STATUS_REPLY),
 #define XLAT_VAL_40 ((unsigned) (ETHTOOL_MSG_PLCA_GET_STATUS_REPLY))
 #define XLAT_STR_40 STRINGIFY(ETHTOOL_MSG_PLCA_GET_STATUS_REPLY)
 [ETHTOOL_MSG_PLCA_NTF] = XLAT(ETHTOOL_MSG_PLCA_NTF),
 #define XLAT_VAL_41 ((unsigned) (ETHTOOL_MSG_PLCA_NTF))
 #define XLAT_STR_41 STRINGIFY(ETHTOOL_MSG_PLCA_NTF)
 [ETHTOOL_MSG_MM_GET_REPLY] = XLAT(ETHTOOL_MSG_MM_GET_REPLY),
 #define XLAT_VAL_42 ((unsigned) (ETHTOOL_MSG_MM_GET_REPLY))
 #define XLAT_STR_42 STRINGIFY(ETHTOOL_MSG_MM_GET_REPLY)
 [ETHTOOL_MSG_MM_NTF] = XLAT(ETHTOOL_MSG_MM_NTF),
 #define XLAT_VAL_43 ((unsigned) (ETHTOOL_MSG_MM_NTF))
 #define XLAT_STR_43 STRINGIFY(ETHTOOL_MSG_MM_NTF)
 [ETHTOOL_MSG_MODULE_FW_FLASH_NTF] = XLAT(ETHTOOL_MSG_MODULE_FW_FLASH_NTF),
 #define XLAT_VAL_44 ((unsigned) (ETHTOOL_MSG_MODULE_FW_FLASH_NTF))
 #define XLAT_STR_44 STRINGIFY(ETHTOOL_MSG_MODULE_FW_FLASH_NTF)
};
static
const struct xlat genl_ethtool_msg_recv[1] = { {
 .data = genl_ethtool_msg_recv_xdata,
 .size = ARRAY_SIZE(genl_ethtool_msg_recv_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
#  ifdef XLAT_VAL_34
  | XLAT_VAL_34
#  endif
#  ifdef XLAT_VAL_35
  | XLAT_VAL_35
#  endif
#  ifdef XLAT_VAL_36
  | XLAT_VAL_36
#  endif
#  ifdef XLAT_VAL_37
  | XLAT_VAL_37
#  endif
#  ifdef XLAT_VAL_38
  | XLAT_VAL_38
#  endif
#  ifdef XLAT_VAL_39
  | XLAT_VAL_39
#  endif
#  ifdef XLAT_VAL_40
  | XLAT_VAL_40
#  endif
#  ifdef XLAT_VAL_41
  | XLAT_VAL_41
#  endif
#  ifdef XLAT_VAL_42
  | XLAT_VAL_42
#  endif
#  ifdef XLAT_VAL_43
  | XLAT_VAL_43
#  endif
#  ifdef XLAT_VAL_44
  | XLAT_VAL_44
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
#  ifdef XLAT_STR_34
  + sizeof(XLAT_STR_34)
#  endif
#  ifdef XLAT_STR_35
  + sizeof(XLAT_STR_35)
#  endif
#  ifdef XLAT_STR_36
  + sizeof(XLAT_STR_36)
#  endif
#  ifdef XLAT_STR_37
  + sizeof(XLAT_STR_37)
#  endif
#  ifdef XLAT_STR_38
  + sizeof(XLAT_STR_38)
#  endif
#  ifdef XLAT_STR_39
  + sizeof(XLAT_STR_39)
#  endif
#  ifdef XLAT_STR_40
  + sizeof(XLAT_STR_40)
#  endif
#  ifdef XLAT_STR_41
  + sizeof(XLAT_STR_41)
#  endif
#  ifdef XLAT_STR_42
  + sizeof(XLAT_STR_42)
#  endif
#  ifdef XLAT_STR_43
  + sizeof(XLAT_STR_43)
#  endif
#  ifdef XLAT_STR_44
  + sizeof(XLAT_STR_44)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
#  undef XLAT_STR_34
#  undef XLAT_VAL_34
#  undef XLAT_STR_35
#  undef XLAT_VAL_35
#  undef XLAT_STR_36
#  undef XLAT_VAL_36
#  undef XLAT_STR_37
#  undef XLAT_VAL_37
#  undef XLAT_STR_38
#  undef XLAT_VAL_38
#  undef XLAT_STR_39
#  undef XLAT_VAL_39
#  undef XLAT_STR_40
#  undef XLAT_VAL_40
#  undef XLAT_STR_41
#  undef XLAT_VAL_41
#  undef XLAT_STR_42
#  undef XLAT_VAL_42
#  undef XLAT_STR_43
#  undef XLAT_VAL_43
#  undef XLAT_STR_44
#  undef XLAT_VAL_44
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
